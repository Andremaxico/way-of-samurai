{"version":3,"file":"static/js/221.62506b55.chunk.js","mappings":"uKACA,G,QAAmE,4BAAnE,EAAyG,2BAAzG,EAA4I,wBAA5I,EAAmL,+B,8EC6BnL,EAfiB,YAE+B,IAD/CA,EAC8C,EAD9CA,SAAUC,EACoC,EADpCA,KAAMC,EAC8B,EAD9BA,WAAYC,EACkB,EADlBA,MAAOC,EACW,EADXA,UAAWC,EACA,EADAA,YAAgBC,GAChB,YAC9C,OACC,iBAAKF,UAAWG,EAAhB,WACC,+CAAcP,EAASC,GAAD,QAAC,UAAUC,GAAX,IACrBM,UAAW,CAACC,MAAO,EAAGC,QAAS,8BAAiCJ,GADjE,IAECF,UAAS,UAAKG,EAAL,YAAyBH,EAAzB,YAAsCD,GAASI,GACxDF,YAAaA,GAAe,MAE5BF,IAAS,cAAGC,UAAWG,EAAd,SAAqCJ,EAAMO,e,+ECxBxD,EAAmE,2BAAnE,EAAsG,wBAAtG,EAAwI,0BAAxI,EAA8K,4BAA9K,EAAyN,+BAAzN,EAAmQ,2B,UCAnQ,EAA2D,mBAA3D,EAAwF,sBAAxF,EAA2H,yBAA3H,EAA8J,sBAA9J,EAA2L,mBAA3L,EAAqN,mBAArN,EAAmP,uB,mBCuBnP,EAfkC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnC,OACC,UAAC,KAAD,CAASC,GAAE,oBAAeD,EAASE,IAAMT,UAAS,UAAKG,EAAL,YAAqBA,GAAvE,WACC,gBAAKH,UAAWG,EAAhB,UACC,gBAAKO,IAAKH,EAASI,UAAWC,IAAI,uCAEnC,iBAAKZ,UAAWG,EAAhB,WACC,cAAGH,UAAWG,EAAd,SAA6BI,EAASV,QACtC,cAAGG,UAAWG,EAAd,+BACA,cAAGH,UAAWG,EAAd,6BCCJ,EAZuC,SAAC,GAAiB,IAAhBU,EAAe,EAAfA,UACxC,OACC,gBAAKb,UAAWG,EAAhB,SAEEU,EAAUC,KAAI,SAAAC,GAAI,OACjB,SAAC,EAAD,CAAMR,SAAUQ,GAAWA,EAAKN,UCGrC,GAAeO,EAAAA,EAAAA,KANS,SAACC,GACxB,MAAO,CACNJ,UAAWI,EAAMC,aAAaL,aAIhC,CAA4DM,G,wBCd/CC,EAAqB,SAACH,GAClC,OAAOA,EAAMC,aAAaG,cAGdC,EAAiB,SAACL,GAC9B,OAAOA,EAAMC,aAAaK,Q,UCNdC,EAAwB,SAACC,EAAgCC,GAClED,GACFA,EAAQE,SAAS,CAChBC,IAAKF,GAAkBD,EAAQI,aAC/BC,SAAU,YCHb,EAAmE,2BAAnE,EAAyG,+BAAzG,EAAiJ,6B,oBC2CjJ,EA7B0C,SAAC,GAAmB,EAAlBC,aAAmB,IAC9D,GACIC,EAAAA,EAAAA,MADIpC,EAAR,EAAQA,SAAUqC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,aAAkCC,GAAhE,EAA4CC,MAA5C,EAAmDC,UAAaF,QAG1DG,GAAWC,EAAAA,EAAAA,MAUjB,OACC,kBAAMC,OAAO,IAAIxC,UAAWG,EAAcsC,SAAWP,GANrC,SAACQ,GAJC,IAACrC,IAKRqC,EAAKC,aAJhBL,GAASM,EAAAA,EAAAA,IAAYvC,IAKrB4B,EAAW,mBAIX,WACC,SAACY,EAAA,EAAD,CACC/C,WAAY,CACXgD,UAAW,CAACzC,MAAO,IAAKC,QAAS,qCACjCF,UAAW,CAACC,MAAO,EAAGC,QAAS,4BAEhCV,SAAUA,EAAUC,KAAK,eAAeG,UAAWG,EACnDJ,MAAOoC,EAAOQ,aAAc1C,YAAY,kBAEzC,mBAAQ8C,UAAU,EAAO/C,UAAWG,EAApC,sB,UCtCH,EAAiE,yBAAjE,EAAuG,4BAAvG,EAA0I,sBAA1I,EAA6K,4BAA7K,EAAuN,6BAAvN,EAA+P,0B,UC8B/P,EAnBqC6C,EAAAA,MAAW,YAAa,IAAXN,EAAU,EAAVA,KAC1CO,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAAqBC,SAC9CC,EAAOX,EAAKY,WAAaL,EAE/B,OACE,iBAAKjD,UAAS,UAAKG,EAAL,YAAwBkD,EAAOlD,EAAqB,IAAlE,WACE,SAAC,KAAD,CAAMK,GAAE,mBAAckC,EAAKa,QAAUvD,UAAWG,EAAhD,UACE,gBAAKO,IAAKgC,EAAKc,OAASC,EAAe7C,IAAI,mBAE7C,iBAAKZ,UAAWG,EAAhB,WACE,SAAC,KAAD,CAAMK,GAAE,mBAAckC,EAAKa,QAA3B,UACE,eAAIvD,UAAWG,EAAf,SAAkCuC,EAAKY,cAEzC,cAAGtD,UAAWG,EAAd,SAA6BuC,EAAKpC,mBCxB1C,EAA6E,qCAA7E,EAA0H,iCCoB1H,EAZ+C,SAAC,GAAe,IAAdmB,EAAa,EAAbA,QAKhD,OACC,mBAAQzB,UAAWG,EAAmBuD,QALnB,WACnBlC,EAAsBC,IAItB,UACC,gBAAKzB,UAAWG,EAAeO,I,qtGAAeE,IAAI,oBC6DrD,EA7D0CoC,EAAAA,MAAW,YAAS,IAAD,GChB9C,SAAmCW,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDesB,IAC5D,IAAMvC,GAAe6B,EAAAA,EAAAA,IAAY9B,GAC3ByC,GAAmBX,EAAAA,EAAAA,IAAY5B,GAErC,EAAwC0B,EAAAA,UAAwB,GAAhE,eAAOc,EAAP,KAAqBC,EAArB,KAEMC,EAAUhB,EAAAA,OAA6B,MAE7CiB,QAAQC,IAAI,oBAAqBL,GAEjC,IAAMvB,GAAWC,EAAAA,EAAAA,MAQX4B,EAAkB,UAAGH,EAAQI,eAAX,aAAG,EAAiBvC,aAC5CoC,QAAQC,IAAI,cAAeC,GAE3B,IAAME,EAAe,WAAO,IAAD,IACpBC,IAAc,UAAAN,EAAQI,eAAR,eAAiBG,YAAa,KAAO,UAAAP,EAAQI,eAAR,eAAiBI,eAAgB,GAC1FP,QAAQC,IAAII,GACZP,GAAiBI,GAAsB,GAAKG,EAAa,GAAK,MAI/DtB,EAAAA,WAAgB,WAGf,OAnBAV,GAASmC,EAAAA,EAAAA,OAkBTJ,IACO,WAhBP/B,GAASoC,EAAAA,EAAAA,UAmBP,IAEH1B,EAAAA,WAAgB,WACZc,GACFtC,EAAsBwC,EAAQI,WAE7B,CAAC/C,IAEJ,IAAMsD,EAAOtD,EAAaP,KAAI,SAAC4B,GAC9B,OAAO,SAAC,EAAD,CAASA,KAAMA,GAAWA,EAAKjC,OAEvC,OACC,gBAAKT,UAAWG,EAAhB,SACuB,UAArB0D,GACA,iCACC,iBAAK7D,UAAWG,EAAkByE,IAAKZ,EAASa,SAAUR,EAA1D,UACGM,GACAb,IAAgB,SAAC,EAAD,CAAmBrC,QAASuC,EAAQI,cAEvD,SAAC,EAAD,CAAkBrC,cAAc,QAEhC,SAAC+C,EAAA,EAAD,S,6CE7DCC,EAA0B,SAAC9D,GAChC,MAAO,CACN+D,SAAU/D,EAAMgE,KAAKD,WCQvB,MDJA,SAAyDE,GAOxD,OAAOlE,EAAAA,EAAAA,IAA2B+D,EAA3B/D,EANiD,SAACmE,GACxD,IAAOH,EAA0BG,EAA1BH,SAAaI,GAApB,OAAiCD,EAAjC,GACA,OAAKH,GAEE,SAACE,GAAD,UAAeE,KAFA,SAAC,KAAD,CAAU5E,GAAG,SAAS6E,SAAO,OCCrD,EAZA,SAAkBF,GACjB,OACC,iBAAKnF,UAAWG,EAAhB,WACC,eAAIH,UAAWG,EAAf,uBACA,iBAAKH,UAAWG,EAAhB,WACC,SAACmF,EAAD,KACA,SAAC,EAAD","sources":["webpack://samurai-way/./src/UI/FormControls/Textarea/Textarea.module.scss?d84d","UI/FormControls/Textarea/Textarea.tsx","webpack://samurai-way/./src/components/Messages/Messages.module.scss?b126","webpack://samurai-way/./src/components/Messages/ChatsList/Chat/Chat.module.scss?c271","components/Messages/ChatsList/Chat/Chat.tsx","components/Messages/ChatsList/ChatsList.tsx","components/Messages/ChatsList/ChatsListContainer.tsx","Redux/messages-selectors.ts","utils/helpers/events.ts","webpack://samurai-way/./src/components/Messages/WriteMessage/WriteMessage.module.scss?00ad","components/Messages/WriteMessage/WriteMessage.tsx","webpack://samurai-way/./src/components/Messages/MessagesList/Message/Message.module.scss?71ca","components/Messages/MessagesList/Message/Message.tsx","webpack://samurai-way/./src/components/Messages/MessagesList/ScrollToBottomBtn/ScrollToBottomBtn.module.scss?f221","components/Messages/MessagesList/ScrollToBottomBtn/ScrollToBottomBtn.tsx","components/Messages/MessagesList/MessagesList.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","hocs/withLoginRedirect.tsx","components/Messages/Messages.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Textarea_container__KVlq1\",\"Textarea\":\"Textarea_Textarea__Vwi60\",\"textarea\":\"Textarea_textarea__ro8Cq\",\"error\":\"Textarea_error__nqZBf\",\"errorMessage\":\"Textarea_errorMessage__6IvbI\"};","import * as React from 'react';\r\n// import { DeepRequired, FieldErrors, FieldErrorsImpl, Merge } from 'react-hook-form';\r\nimport { FormFieldErrorType } from '../../../types/types';\r\nimport classes from './Textarea.module.scss';\r\n\r\ntype PropsType<FormFieldNames> = {\r\n\tregister: any,\r\n\tname: FormFieldNames,\r\n\tvalidation?: object,\r\n\terror: FormFieldErrorType | undefined /*| Merge<FieldErrors, FieldErrorsImpl<DeepRequired<any>>> */,\r\n\tclassName?: string,\r\n\tplaceholder?: string,\r\n\trest?: object,\r\n}\r\n\r\nconst Textarea = <FieldsNamesType extends string>({\r\n\tregister, name, validation, error, className, placeholder, ...rest\r\n}: PropsType<FieldsNamesType>): JSX.Element => {\r\n\treturn (\r\n\t\t<div className={classes.Textarea}>\r\n\t\t\t<textarea {...register(name, {...validation, \r\n\t\t\t\tminLength: {value: 2, message: 'Your text is too short'}})} {...rest}\r\n\t\t\t\tclassName={`${classes.textarea} ${className} ${error && classes.error}`}\r\n\t\t\t\tplaceholder={placeholder || ''}\r\n\t\t\t></textarea>\r\n\t\t\t{error && <p className={classes.errorMessage}>{error.message}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Textarea;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Messages_container__dHi4e\",\"messages\":\"Messages_messages__IgMFi\",\"title\":\"Messages_title__VXZgD\",\"content\":\"Messages_content__jpL2Q\",\"chatsList\":\"Messages_chatsList__zUglO\",\"currChatWrap\":\"Messages_currChatWrap__2TARi\",\"currChat\":\"Messages_currChat__Jlhkv\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Chat_container__JABCy\",\"chat\":\"Chat_chat__I2FIR\",\"_active\":\"Chat__active__ZCXA3\",\"userAvatar\":\"Chat_userAvatar__jeCZm\",\"message\":\"Chat_message__g5PSZ\",\"name\":\"Chat_name__a0eeN\",\"text\":\"Chat_text__5hepD\",\"sendDate\":\"Chat_sendDate__nXGjK\"};","import * as React from 'react'\r\nimport classes from './Chat.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserInfoType } from '../../../../types/types';\r\n\r\ntype PropsType = {\r\n\tuserInfo: UserInfoType,\r\n}\r\n\r\nconst Chat: React.FC<PropsType> = ({userInfo}) => {\r\n\treturn (\r\n\t\t<NavLink to={`/messages/${userInfo.id}`} className={`${classes.chat} ${classes._active}`}>\r\n\t\t\t<div className={classes.userAvatar}>\r\n\t\t\t\t<img src={userInfo.avatarUrl} alt=\"user that send a message avatar\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<p className={classes.name}>{userInfo.name}</p>\r\n\t\t\t\t<p className={classes.text}>Hi, How are you?</p>\r\n\t\t\t\t<p className={classes.sendDate}>19.06.21</p>\r\n\t\t\t</div>\r\n\t\t</NavLink>\r\n\t)\r\n}\r\n\r\nexport default Chat;\r\n","import * as React from 'react';\r\nimport Chat from './Chat';\r\nimport classes from '../Messages.module.scss';\r\nimport { ChatsListPropsType } from './ChatsListContainer';\r\n\r\ntype PropsType = ChatsListPropsType;\r\n\r\nconst ChatsList: React.FC<PropsType> = ({usersInfo}) => {\r\n\treturn (\r\n\t\t<div className={classes.chatsList}>\r\n\t\t\t{\r\n\t\t\t\tusersInfo.map(info => (\r\n\t\t\t\t\t<Chat userInfo={info} key={info.id}/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatsList;\r\n","import { connect } from 'react-redux';\r\nimport { RootStateType } from '../../../Redux/redux-store';\r\nimport { UserInfoType } from '../../../types/types';\r\nimport ChatsList from './ChatsList';\r\n\r\nexport type ChatsListPropsType = {\r\n\tusersInfo: Array<UserInfoType>,\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): ChatsListPropsType => {\r\n\treturn {\r\n\t\tusersInfo: state.messagesPage.usersInfo,\r\n\t}\r\n}\r\n\r\nexport default connect<ChatsListPropsType>(mapStateToProps)(ChatsList);","import { RootStateType } from './redux-store';\r\nexport const selectMessagesData = (state: RootStateType) => {\r\n\treturn state.messagesPage.messagesData;\r\n}\r\n\r\nexport const selectWsStatus = (state: RootStateType) => {\r\n\treturn state.messagesPage.status;\r\n}","export const scrollElementToBottom = (element: HTMLDivElement | null, heightToScroll?: number) => {\r\n\tif(element) {\r\n\t\telement.scrollTo({\r\n\t\t\ttop: heightToScroll || element.scrollHeight,\r\n\t\t\tbehavior: 'smooth',\r\n\t\t});\r\n\t}\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WriteMessage_container__djJXv\",\"form\":\"WriteMessage_form__JsJzI\",\"textarea\":\"WriteMessage_textarea__N3p9r\",\"button\":\"WriteMessage_button__HpJk6\"};","import * as React from 'react';\r\nimport classes from './WriteMessage.module.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport Textarea from '../../../UI/FormControls/Textarea';\r\nimport { useDispatch } from 'react-redux';\r\nimport { messagesActions, sendMessage } from '../../../Redux/messages-reducer';\r\nimport { AnyAction } from 'redux';\r\n\r\ntype PropsType = {\r\n\tisConnecting: boolean,\r\n}\r\ntype NewMessageFormType = {\r\n\tmessageValue: string,\r\n}\r\n\r\nconst WriteMessage: React.FC<PropsType> = ({isConnecting}) => {\r\n\tconst { register, resetField, handleSubmit, watch, formState: { errors } \r\n\t} = useForm<NewMessageFormType>();\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst addMessage = (value: string) => {\r\n\t\tdispatch(sendMessage(value) as unknown as AnyAction);\r\n\t}\r\n\r\n\tconst onSubmit = (data: NewMessageFormType) => {\r\n\t\taddMessage(data.messageValue);\r\n\t\tresetField('messageValue');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form action='#' className={classes.form} onSubmit={ handleSubmit(onSubmit) }>\r\n\t\t\t<Textarea<keyof NewMessageFormType>\r\n\t\t\t\tvalidation={{ \r\n\t\t\t\t\tmaxLength: {value: 100, message: 'Cannot send message, length > 100'},\r\n\t\t\t\t\tminLength: {value: 2, message: 'You don`t type anything'},\r\n\t\t\t\t}}\r\n\t\t\t\tregister={register} name='messageValue' className={classes.textarea}\r\n\t\t\t\terror={errors.messageValue} placeholder='Your message'\r\n\t\t\t/>\r\n\t\t\t<button disabled={false} className={classes.button}>Send</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default WriteMessage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Message_container__bA1R1\",\"message\":\"Message_message__MPay-\",\"_myMessage\":\"Message__myMessage__yJ-SO\",\"text\":\"Message_text__R6oqA\",\"userAvatar\":\"Message_userAvatar__74m+M\",\"messageBody\":\"Message_messageBody__44UPX\",\"username\":\"Message_username__R8GAx\"};","import  * as React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMyProfileInfo } from '../../../../Redux/profile-selectors';\r\nimport { MessageDataType } from '../../../../types/types';\r\nimport classes from './Message.module.scss';\r\nimport defaultAvatar from '../../../../assests/images/default-user-avatar.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  data: MessageDataType,\r\n}\r\n\r\nconst Message: React.FC<PropsType> = React.memo(({data}) => {\r\n  const myUsername = useSelector(selectMyProfileInfo).fullName;\r\n  const isMy = data.userName === myUsername;\r\n\r\n  return (\r\n    <div className={`${classes.message} ${isMy ? classes._myMessage : ''}`}>\r\n      <Link to={`/profile/${data.userId}`} className={classes.userAvatar}>\r\n        <img src={data.photo || defaultAvatar} alt=\"User avatar\" />\r\n      </Link>\r\n      <div className={classes.messageBody}>\r\n        <Link to={`/profile/${data.userId}`}>\r\n          <h5 className={classes.username}>{data.userName}</h5>\r\n        </Link>\r\n        <p className={classes.text}>{data.message}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ScrollToBottomBtn_container__+2KDh\",\"scrollBtn\":\"ScrollToBottomBtn_scrollBtn__Loaih\",\"arrow\":\"ScrollToBottomBtn_arrow__T1RgC\"};","import * as React from 'react';\r\nimport classes from './ScrollToBottomBtn.module.scss';\r\nimport {scrollElementToBottom} from '../../../../utils/helpers/events';\r\nimport arrowImg from '../../../../assests/images/arrow.png'\r\n\r\ntype PropsType = {\r\n\telement: HTMLDivElement | null,\r\n};\r\n\r\nconst ScrollToBottomBtn: React.FC<PropsType> = ({element}) => {\r\n\tconst handleClick = () => {\r\n\t\tscrollElementToBottom(element);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button className={classes.scrollBtn} onClick={handleClick}>\r\n\t\t\t<img className={classes.arrow} src={arrowImg} alt='scrollBottom' />\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default ScrollToBottomBtn  ","import * as React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AnyAction } from 'redux';\r\nimport { messagesActions, startMessagesListening, stopMessagesListening } from '../../../Redux/messages-reducer';\r\nimport { selectMessagesData, selectWsStatus } from '../../../Redux/messages-selectors';\r\nimport { MessageDataType } from '../../../types/types';\r\nimport Preloader from '../../../UI/Preloader';\r\nimport { scrollElementToBottom } from '../../../utils/helpers/events';\r\nimport classes from '../Messages.module.scss';\r\nimport WriteMessageForm from '../WriteMessage';\r\nimport Message from './Message';\r\nimport ScrollToBottomBtn from './ScrollToBottomBtn';\r\n\r\n\r\ntype PropsType = {};\r\n\r\nconst MessagesList: React.FC<PropsType> = React.memo(({}) => {\r\n\tconst messagesData = useSelector(selectMessagesData);\r\n\tconst connectionStatus = useSelector(selectWsStatus);\r\n\t\r\n\tconst [isAutoscroll, setIsAutoscroll] = React.useState<boolean>(false)\r\n\r\n\tconst listRef = React.useRef<HTMLDivElement>(null);\r\n\r\n\tconsole.log('connection status', connectionStatus);  \r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst startMessagesListener = () => {\r\n\t\tdispatch(startMessagesListening() as unknown as AnyAction);\r\n\t}\r\n\tconst stopMessagesListener = () => {\r\n\t\tdispatch(stopMessagesListening() as unknown as AnyAction);\r\n\t}\r\n\t\r\n\tconst messagesListHeight = listRef.current?.scrollHeight;\r\n\tconsole.log('list height', messagesListHeight);\r\n\t//on scroll\r\n\tconst handleScroll = () => {\r\n\t\tconst listScroll = (listRef.current?.scrollTop || 0)  + (listRef.current?.clientHeight || 0);\r\n\t\tconsole.log(listScroll);\r\n\t\tsetIsAutoscroll((messagesListHeight || 0) - listScroll + 20 < 300);\r\n\t}\r\n\r\n\t//connecting to channel \r\n\tReact.useEffect(() => {\r\n\t\tstartMessagesListener();\r\n\t\thandleScroll();\r\n\t\treturn () => {\r\n\t\t\tstopMessagesListener();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(isAutoscroll) {\r\n\t\t\tscrollElementToBottom(listRef.current);\r\n\t\t}\r\n\t}, [messagesData]);\r\n\r\n\tconst list = messagesData.map((data) => {\r\n\t\treturn <Message data={data} key={data.id}/>\r\n\t});\r\n\treturn (\r\n\t\t<div className={classes.currChatWrap}> \r\n\t\t\t{connectionStatus === 'ready' ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={classes.currChat} ref={listRef} onScroll={handleScroll}>\r\n\t\t\t\t\t\t{ list }\r\n\t\t\t\t\t\t{!isAutoscroll && <ScrollToBottomBtn element={listRef.current}/> }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<WriteMessageForm isConnecting={false}/>\r\n\t\t\t\t</> \r\n\t\t\t: <Preloader />\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default MessagesList;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import * as React from 'react';\r\nimport { connect, DispatchProp, Matching } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AnyAction } from 'redux';\r\nimport { RootStateType } from '../Redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n\tisAuthed: boolean,\r\n}\r\n\r\nconst mapStateToPropsRedirect = (state: RootStateType): MapStatePropsType => {\r\n\treturn {\r\n\t\tisAuthed: state.auth.isAuthed,\r\n\t}\r\n}\r\n\r\nfunction withLoginRedirect <P extends MapStatePropsType>(Component: React.ComponentType<P>)  {\r\n\tconst ComponentContainer: React.FC<MapStatePropsType> = (props) => {\r\n\t\tconst {isAuthed, ...restProps} = props;\r\n\t\tif (!isAuthed) return <Navigate to='/login' replace /> \r\n\r\n\t\treturn <Component {...restProps as P} />\r\n\t}\r\n\treturn connect<MapStatePropsType>(mapStateToPropsRedirect)(ComponentContainer);\r\n}\r\n\r\nexport default withLoginRedirect;","import  * as React from 'react';\r\nimport classes from './Messages.module.scss';\r\nimport ChatsListContainer from './ChatsList';\r\nimport MessagesList from './MessagesList';\r\nimport withLoginRedirect from '../../hocs/withLoginRedirect';\r\n\r\ntype PropsType = {}\r\n\r\nfunction Messages(props: PropsType) {\r\n\treturn (\r\n\t\t<div className={classes.messages}>\r\n\t\t\t<h2 className={classes.title}>Messages</h2>\r\n\t\t\t<div className={classes.content}>\r\n\t\t\t\t<ChatsListContainer />\r\n\t\t\t\t<MessagesList />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withLoginRedirect(Messages);"],"names":["register","name","validation","error","className","placeholder","rest","classes","minLength","value","message","userInfo","to","id","src","avatarUrl","alt","usersInfo","map","info","connect","state","messagesPage","ChatsList","selectMessagesData","messagesData","selectWsStatus","status","scrollElementToBottom","element","heightToScroll","scrollTo","top","scrollHeight","behavior","isConnecting","useForm","resetField","handleSubmit","errors","watch","formState","dispatch","useDispatch","action","onSubmit","data","messageValue","sendMessage","Textarea","maxLength","disabled","React","myUsername","useSelector","selectMyProfileInfo","fullName","isMy","userName","userId","photo","defaultAvatar","onClick","obj","TypeError","connectionStatus","isAutoscroll","setIsAutoscroll","listRef","console","log","messagesListHeight","current","handleScroll","listScroll","scrollTop","clientHeight","startMessagesListening","stopMessagesListening","list","ref","onScroll","Preloader","mapStateToPropsRedirect","isAuthed","auth","Component","props","restProps","replace","ChatsListContainer"],"sourceRoot":""}