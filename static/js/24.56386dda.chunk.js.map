{"version":3,"file":"static/js/24.56386dda.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/UI/FormControls/Checkbox/Checkbox.module.scss?25a9","UI/FormControls/Checkbox/Checkbox.jsx","webpack://samurai-way/./src/UI/FormControls/Field/Field.module.scss?80fb","UI/FormControls/Field/Field.jsx","webpack://samurai-way/./src/UI/FormControls/Textarea/Textarea.module.scss?d84d","UI/FormControls/Textarea/Textarea.jsx","webpack://samurai-way/./src/components/Profile/ProfileBody/ProfileBody.module.scss?0686","components/Profile/ProfileBody/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileBody/ProfileInfoForm/ProfileInfoForm.jsx","components/Profile/ProfileBody/ProfileBody.jsx","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.jsx","webpack://samurai-way/./src/components/Profile/Profile.module.scss?4008","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://samurai-way/./src/components/Profile/NewPost/NewPost.module.scss?b205","components/Profile/NewPost/NewPostContainer.jsx","components/Profile/NewPost/NewPost.jsx","components/Profile/Profile.jsx","Redux/auth-selectors.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Checkbox_container__sVo6P\",\"Checkbox\":\"Checkbox_Checkbox__JIYPe\",\"error\":\"Checkbox_error__dLJ4c\"};","import React from 'react'\r\nimport classes from './Checkbox.module.scss';\r\n\r\nconst Checkbox = ({register, name, ...rest}) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Checkbox} ${rest.className}`}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"checkbox\" id={name} \r\n\t\t\t\t{...register(name, {required: true, ...rest.validation} )} \r\n\t\t\t\tclassName={classes.checkboxInput}\r\n\t\t\t/>\r\n\t\t\t<label \r\n\t\t\t\thtmlFor={name} tabIndex='0' \r\n\t\t\t\tclassName={`${classes.checkboxLabel} ${rest.error && classes.error}`}\r\n\t\t\t>{rest.labelText}</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Field_container__1XU3U\",\"Field\":\"Field_Field__-Tjhi\",\"errorMessage\":\"Field_errorMessage__vB2Ku\"};","import React from 'react';\r\nimport classes from './Field.module.scss';\r\n\r\nconst Field = ({className, error, children }) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Field} ${className}`}>\r\n\t\t\t{children}\r\n\t\t\t{error && <p className={classes.errorMessage}>{error.message}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const PasswordField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"password\" className={classes.input}  autoComplete='true'\r\n\t\t\t\tplaceholder='Password' {...register('password', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t//value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\r\n\t\t\t\t\t\tmessage: 'Password must have at least 1 upper case symbol, 1 number', \r\n\t\t\t\t\t},\r\n\t\t\t\t\tminLength: {value: 8, message: 'Your password too short'},\r\n\t\t\t\t\tmaxLength: {value: 14, message: 'Your password too long'},\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport const EmailField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"email\" className={classes.input} \r\n\t\t\t\tplaceholder='Email' {...register('email', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport default Field;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Textarea_container__KVlq1\",\"Textarea\":\"Textarea_Textarea__Vwi60\",\"textarea\":\"Textarea_textarea__ro8Cq\",\"error\":\"Textarea_error__nqZBf\",\"errorMessage\":\"Textarea_errorMessage__6IvbI\"};","import React from 'react';\r\nimport classes from './Textarea.module.scss';\r\n\r\nconst Textarea = ({register, name, validation, ...rest}) => {\r\n\treturn (\r\n\t\t<div className={classes.Textarea}>\r\n\t\t\t<textarea {...register(name, {...validation, \r\n\t\t\t\tminLength: {value: 2, message: 'Your text is too short'}})} {...rest}\r\n\t\t\t\tclassName={`${classes.textarea} ${rest.className} ${rest.error && classes.error}`}\r\n\t\t\t\tplaceholder={rest.placeholder || ''}\r\n\t\t\t></textarea>\r\n\t\t\t{rest.error && <p className={classes.errorMessage}>{rest.error.message}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Textarea;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileBody_container__IDU7r\",\"profileBody\":\"ProfileBody_profileBody__YJWNv\",\"cover\":\"ProfileBody_cover__1KR2Z\",\"info\":\"ProfileBody_info__alpqF\",\"avatar\":\"ProfileBody_avatar__WQwrJ\",\"my\":\"ProfileBody_my__5cGg0\",\"ProfileInfo\":\"ProfileBody_ProfileInfo__GywZa\",\"login\":\"ProfileBody_login__cTPUm\",\"statusText\":\"ProfileBody_statusText__dsdVz\",\"defaultStatus\":\"ProfileBody_defaultStatus__vZOuL\",\"profileStatus\":\"ProfileBody_profileStatus__GNJJn\",\"statusInput\":\"ProfileBody_statusInput__VOoMQ\",\"editBtn\":\"ProfileBody_editBtn__OVUeV\",\"ProfileInfoForm\":\"ProfileBody_ProfileInfoForm__CEaZv\",\"errorMessage\":\"ProfileBody_errorMessage__Ya9NO\",\"input\":\"ProfileBody_input__jIRrx\",\"lookingForAJob\":\"ProfileBody_lookingForAJob__wpsbi\",\"lookingForAJobDescription\":\"ProfileBody_lookingForAJobDescription__fJIUi\",\"submitBtn\":\"ProfileBody_submitBtn__ITDKu\",\"contacts\":\"ProfileBody_contacts__5OOPg\",\"contactsTitle\":\"ProfileBody_contactsTitle__wJUsx\",\"contact\":\"ProfileBody_contact__3ow2t\",\"logoutBtn\":\"ProfileBody_logoutBtn__6VR8k\"};","import React from 'react';\r\nimport ProfileStatus from '../ProfileStatus';\r\nimport classes from '../ProfileBody.module.scss';\r\n\r\nconst Contact = ({contact, title, value}) => {\r\n\tif(value) {\r\n\t\treturn (\r\n\t\t\t<div className={classes.contact}><a href={value} target='_blank'>{title}</a></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst ProfileInfo = ({profileInfo, updateMyStatus, activateEdit}) => {\r\n\tconst {\r\n\t\tfullName, aboutMe, isMyProfile, contacts, \r\n\t\tlookingForAJob, lookingForAJobDescription,\r\n\t} = profileInfo;\r\n\r\n\t//sets {key: value} to [[key, value]]\r\n\tconst contactsArr = Object.entries(contacts);\r\n\t//map [[key, value]] to React component\r\n\tconst contactsList = contactsArr.map(([title, value]) => {\r\n\t\treturn <Contact key={title} title={title} value={value}/>\r\n\t})\r\n\r\n\t//AndreMaxico => Andre Maxico\r\n\tconst name = fullName.split('').map(symbol => {\r\n\t\treturn symbol.toUpperCase() === symbol ? ` ${symbol}` : symbol\r\n\t});\r\n\treturn (\r\n\t\t<div className={classes.ProfileInfo}>\r\n\t\t\t<p className={classes.login}>{name}</p>\r\n\t\t\t<div className={classes.statusText}>\r\n\t\t\t\t<p>{aboutMe}</p>\r\n\t\t\t</div>\r\n\t\t\t<p className={classes.lookingForAJob}><b>Looking for a job:</b> {lookingForAJob ? 'Yes' : 'No'}</p>\r\n\t\t\t{lookingForAJob &&\r\n\t\t\t\t<p className={classes.lookingForAJobDescription}><b>Description:</b> {lookingForAJobDescription}</p>\r\n\t\t\t}\r\n\t\t\t<h2 className={classes.contactsTitle}>Contacts</h2>\r\n\t\t\t<div className={classes.contacts}>\r\n\t\t\t\t{contactsList}\r\n\t\t\t</div>\r\n\t\t\t{isMyProfile &&\r\n\t\t\t\t<button className={classes.editBtn} onClick={activateEdit}>Edit</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React, { useEffect } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Field from '../../../../UI/FormControls/Field/Field';\r\nimport Checkbox from '../../../../UI/FormControls/Checkbox';\r\nimport Textarea from '../../../../UI/FormControls/Textarea';\r\nimport classes from '../ProfileBody.module.scss';\r\nimport ProfileStatus from '../ProfileStatus';\r\nimport { login } from '../../../../Redux/auth-reducer';\r\nimport getFormSubmitErrors from 'redux-form/lib/getFormSubmitErrors';\r\n\r\nconst ProfileInfoForm = ({deactivateEdit, profileInfo, myProfileFormError, updateMyProfileData, formError}) => {\r\n\tconst { \r\n\t\tregister, handleSubmit, watch, \r\n\t\tsetFocus, formState: { errors }, setError, clearErrors\r\n\t} = useForm({\r\n\t\tdefaultValues: {\r\n\t\t\t...profileInfo\r\n\t\t}\r\n\t});\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetFocus(\"fullName\", {shouldSelect: true});\r\n\t}, [setFocus]);\r\n\r\n\t//sets {key: value} to [[key, value]]\r\n\tconst contactsArr = Object.entries(profileInfo.contacts);\r\n\t//map [[key, value]] to React component\r\n\tconst contactsInputsList = contactsArr.map(([title, value]) => {\r\n\t\treturn (\r\n\t\t\t<div className={classes.contact} key={title}>\r\n\t\t\t\t<b>{title}:</b>\r\n\t\t\t\t<Field className={classes.contact} error={errors.contacts && errors.contacts[title]}>\r\n\t\t\t\t\t<input key={title}\r\n\t\t\t\t\t\ttype=\"url\" placeholder={`Input your ${title}'s link`} {...register(`contacts.${title}`, {\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\r\n\t\t\t\t\t\t\t\tmessage: 'Input valid link, http://www.websiteName.com/...',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Field>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif(formError) {\r\n\t\t\tsetError('summary', {\r\n\t\t\t\ttype: 'custom',\r\n\t\t\t\tmessage: formError,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tclearErrors('summary');\r\n\t\t}\r\n\t}, [formError])\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tupdateMyProfileData(data);\r\n\t\tdeactivateEdit();\r\n\t}\r\n\r\n\tconst onFormChange = () => {\r\n\t\tclearErrors('summary');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className={classes.ProfileInfoForm} onChange={onFormChange} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t{errors.summary &&\r\n\t\t\t\t<p className={classes.errorMessage}>{errors.summary.message}</p>\r\n\t\t\t}\r\n\t\t\t<Field className={classes.input} error={errors.fullName}>\r\n\t\t\t\t<input type=\"text\" placeholder='Input your login' {...register('fullName', {\r\n\t\t\t\t\tpattern: /[a-zA-Z]+/,\r\n\t\t\t\t\tminLength: {value: 2, message: 'Your name must include over 1 symbol'},\r\n\t\t\t\t\tmaxLength: {value: 60, message: 'Your login must be shorter than 61 symbol'},\r\n\t\t\t\t})}/>\r\n\t\t\t</Field>\r\n\t\t\t<Textarea \t\r\n\t\t\t\tplaceholder='About me' name='aboutMe' \r\n\t\t\t\terror={errors.aboutMe} validation={{maxLength: {value: 300, message: 'Max status length: 300'}}}\r\n\t\t\t\tregister={register}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.lookingForAJob}><b>Looking for a job:</b> \r\n\t\t\t\t<Checkbox name='lookingForAJob' register={register} validation={{required: false}} labelText=''/>\r\n\t\t\t</div>\r\n\t\t\t{watch('lookingForAJob') &&\r\n\t\t\t\t<div className={classes.lookingForAJobDescription}><b>Description:</b> \r\n\t\t\t\t\t<Textarea \r\n\t\t\t\t\t\tregister={register} name='lookingForAJobDescription'\r\n\t\t\t\t\t\terror={errors.lookingForAJobDescription} placeholder='For job description'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div className={classes.contacts}>\r\n\t\t\t\t<h2 className={classes.contactsTitle}>Contacts</h2>\r\n\t\t\t\t{ contactsInputsList }\r\n\t\t\t</div>\r\n\t\t\t<button type='submit' className={classes.submitBtn}>Save</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfoForm;","import React, { useState } from 'react';\r\nimport classes from './ProfileBody.module.scss';\r\nimport defaultAvatar from '../../../assests/images/default-user-avatar.png';\r\nimport defaultCover from '../../../assests/images/default-cover.png';\r\nimport Preloader from '../../../UI/Preloader';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport ProfileInfoForm from './ProfileInfoForm';\r\n\r\nfunction ProfileBody({ logout, setAvatar, currUserProfileInfo: profileInfo, updateMyStatus, formError, updateMyProfileData}) {\r\n\tconst [isAvatarUpdating, setIsAvatarUpdating] = useState(false);\r\n\tconst [isEdit, setIsEdit] = useState(false);\r\n\tconst {userId: id, photos, isMyProfile} = profileInfo;\r\n\r\n\tconst {small: coverImg, large: avatarImg} = photos;\r\n\r\n\t//change avatar\r\n\tconst avatarFileChange = async (e) => {\r\n\t\tif(e.target.files.length > 0) {\r\n\t\t\tsetIsAvatarUpdating(true);\r\n\t\t\tawait setAvatar(e.target.files[0]);\r\n\t\t\tsetIsAvatarUpdating(false);\r\n\t\t}\r\n\t}\r\n\r\n\t//isEdit\r\n\tconst activateEdit = () => setIsEdit(true);\r\n\tconst deactivateEdit = () => setIsEdit(false);\r\n\r\n\tif(isAvatarUpdating) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileBody}>\r\n\t\t\t<div className={classes.cover}>\r\n\t\t\t\t<img src={coverImg || defaultCover} alt=\"Cover img\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.info}>\r\n\t\t\t\t<div className={`${classes.avatar} ${isMyProfile && classes.my}`}>\r\n\t\t\t\t\t<img src={avatarImg || defaultAvatar} alt=\"Loading avatar...\" />\r\n\t\t\t\t\t{ isMyProfile && \r\n\t\t\t\t\t\t<div className={classes.addFile}>\r\n\t\t\t\t\t\t\t<input type='file' id='getFile' onChange={ avatarFileChange }/> \r\n\t\t\t\t\t\t\t<label htmlFor=\"getFile\">Set avatar</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{isEdit ?\r\n\t\t\t\t\t<ProfileInfoForm \r\n\t\t\t\t\t\tdeactivateEdit={deactivateEdit} formError={formError}\r\n\t\t\t\t\t\tprofileInfo={profileInfo} formError={formError}\r\n\t\t\t\t\t\tupdateMyStatus={updateMyStatus} updateMyProfileData={updateMyProfileData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\t<ProfileInfo activateEdit={activateEdit} profileInfo={profileInfo} updateMyStatus={updateMyStatus}/>\r\n\t\t\t\t}\r\n\t\t\t\t{ isMyProfile && <button className={classes.logoutBtn} onClick={ logout }>Logout</button>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileBody;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Post_container__FORhV\",\"post\":\"Post_post__43cTw\",\"avatar\":\"Post_avatar__dGEbx\",\"text\":\"Post_text__swDVs\"};","import React from 'react'\r\nimport classes from './Post.module.scss';\r\n\r\nfunction Post (props) {\r\n  return (\r\n\t <div className={classes.post}>\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<img src={props.avatarUrl}/>\r\n\t\t</div>\r\n\t\t<div className={classes.text}>\r\n\t\t\t<p>{props.data.text}</p>\r\n\t\t\t<p>Likes count: {props.data.likes}</p>\r\n\t\t</div>\t\r\n\t </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__Wm7l7\",\"profile\":\"Profile_profile__iROPK\",\"myPosts\":\"Profile_myPosts__3JCrI\",\"title\":\"Profile_title__g+iCI\"};","import React from 'react';\r\nimport Post from './Post';\r\nimport classes from '../Profile.module.scss';\r\nimport defaultAvatar from '../../../assests/images/default-user-avatar.png';\r\n\r\nconst MyPosts = (props) => {\r\n\tconst postsList = props.postsData.map((data, index) => {\r\n\t\treturn <Post avatarUrl={props.avatarUrl || defaultAvatar} data={data} key={index}/>;\r\n\t});\r\n\treturn (\r\n\t\t<div className={classes.myPosts}>\r\n\t\t\t{ postsList }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\nimport defaultAvatar from '../../../assests/images/default-user-avatar.png';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tpostsData: state.profilePage.postsData,\r\n\t\tavatarUrl: state.profilePage.currUserProfileInfo?.photos.small ||\r\n\t\t\t\t\t  defaultAvatar,\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NewPost_container__IKpkL\",\"title\":\"NewPost_title__5NM8Q\",\"NewPost\":\"NewPost_NewPost__l342s\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost} from '../../../Redux/profile-reducer';\r\nimport NewPost from './NewPost';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst NewPostContainer = connect(mapStateToProps, {addPost})(NewPost);\r\n\r\nexport default NewPostContainer;\r\n","import React from 'react';\r\nimport classes from './NewPost.module.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport Textarea from '../../../UI/FormControls/Textarea';\r\n\r\nexport default function NewPost(props) {\r\n\tconst { handleSubmit, resetField, watch, register, formState: { errors } } = useForm();\r\n\r\n\tconst onSubmit = () => {\r\n\t\tprops.addPost(watch('postText'));\r\n\t\tresetField('postText')\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className={classes.NewPost} onSubmit={ handleSubmit( onSubmit ) }>\r\n\t\t\t<Textarea \r\n\t\t\t\tvalidation={{maxLength: {value: 500, message: 'Your post too long'},\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\tname='postText' placeholder='text...' register={register} error={errors.postText}\r\n\t\t\t/>\r\n\t\t\t<button>Add Post</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport ProfileBody from './ProfileBody';\r\nimport MyPosts from './MyPosts';\r\nimport NewPost from './NewPost'\r\nimport classes from './Profile.module.scss'\r\nimport Preloader from '../../UI/Preloader';\r\n\r\nconst Profile = (props) => {\r\n\tif(!props.currUserProfileInfo) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profile}>\r\n\t\t\t<ProfileBody \r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t<h2 className={classes.title}>My posts</h2>\r\n\t\t\t<NewPost />\r\n\t\t\t<MyPosts />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;\r\n","export const getIsAuthed = (state) => {\r\n\treturn state.auth.data.isAuthed;\r\n} \r\n","import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport Preloader from '../../UI/Preloader';\r\n//reducers\r\nimport { toggleIsFetchingAC } from '../../Redux/users-reducer';\r\nimport { setUserById, updateMyStatus, setAvatar, updateMyProfileData } from '../../Redux/profile-reducer';\r\nimport { logout } from '../../Redux/auth-reducer';\r\n//selectors\r\nimport { getIsAuthed } from '../../Redux/auth-selectors';\r\n//hocs\r\nimport withRouter from '../../hocs/withRouter';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport withNetworkRedirect from '../../hocs/withNetworkRedirect';\r\n\r\nconst ProfileContainer = (props) => {\r\n\tconst [userId, setUserId] = useState(null);\r\n\t\r\n\t//if we render other user profile, we set const userId\r\n\tuseEffect(() => {\r\n\t\tif(props.router.params.userId) {\r\n\t\t\t//set const for show user profile\r\n\t\t\tsetUserId(props.router.params.userId);\r\n\t\t} else {\r\n\t\t\t//set const to null to show my profile\r\n\t\t\tsetUserId(null);\r\n\t\t}\r\n\r\n\t}, [props.router.params.userId]);\r\n\r\n\t//set currUserProfileInfo in state if we got userId\r\n\tuseEffect(() => {\r\n\t\t//if we get other user id, we set this with thunk\r\n\t\tif(userId) {\r\n\t\t\tprops.setUserById(userId).then(() => props.toggleIsFetching(false));\r\n\t\t}\r\n\t}, [userId])\r\n\r\n\tif (!props.isAuthed && !props.router.params.userId) return <Navigate to='/login' replace />\r\n\r\n\tif(props.isFetching ) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<Profile currUserProfileInfo={ userId\r\n\t\t\t\t? props.currUserProfileInfo\r\n\t\t\t\t: props.myProfileInfo\r\n\t\t\t\t}\r\n\t\t\t\tupdateMyStatus={props.updateMyStatus} logout={props.logout}\r\n\t\t\t\tformError={props.formError}\r\n\t\t\t\tsetAvatar={props.setAvatar} updateMyProfileData={props.updateMyProfileData}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcurrUserProfileInfo: state.profilePage.currUserProfileInfo,\r\n\t\tmyProfileInfo: state.profilePage.myProfileInfo,\r\n\t\tmyProfileId: state.auth.data.id,\r\n\t\tisFetching: state.usersPage.isFetching,\r\n\t\tformError: state.profilePage.myProfileFormError,\r\n\t\tcaptchaUrl: state.auth.captchaUrl,\r\n\t\tisAuthed: getIsAuthed(state),\r\n\t}\r\n}\r\nconst methods = {\r\n\ttoggleIsFetching: toggleIsFetchingAC,\r\n\tsetUserById,\r\n\tupdateMyStatus,\r\n\tlogout,\r\n\tsetAvatar,\r\n\tupdateMyProfileData,\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, methods),\r\n\twithNetworkRedirect,\r\n\twithRouter,\r\n)(ProfileContainer);\r\n"],"names":["register","name","rest","className","classes","type","id","required","validation","htmlFor","tabIndex","error","labelText","Field","children","message","PasswordField","autoComplete","placeholder","pattern","minLength","value","maxLength","EmailField","Contact","contact","title","href","target","profileInfo","activateEdit","updateMyStatus","fullName","aboutMe","isMyProfile","contacts","lookingForAJob","lookingForAJobDescription","contactsList","Object","entries","map","split","symbol","toUpperCase","onClick","deactivateEdit","updateMyProfileData","myProfileFormError","formError","useForm","defaultValues","handleSubmit","watch","setFocus","errors","formState","setError","clearErrors","useEffect","shouldSelect","contactsInputsList","onChange","onSubmit","data","summary","Textarea","Checkbox","logout","setAvatar","currUserProfileInfo","useState","isAvatarUpdating","setIsAvatarUpdating","isEdit","setIsEdit","photos","userId","coverImg","small","avatarImg","large","avatarFileChange","e","files","length","Preloader","src","defaultCover","alt","defaultAvatar","props","avatarUrl","text","likes","postsList","postsData","index","connect","state","profilePage","MyPosts","newPostText","addPost","resetField","postText","getIsAuthed","auth","isAuthed","methods","toggleIsFetching","toggleIsFetchingAC","setUserById","compose","myProfileInfo","myProfileId","isFetching","usersPage","captchaUrl","withNetworkRedirect","withRouter","setUserId","router","params","then","to","replace"],"sourceRoot":""}