{"version":3,"file":"static/js/12.19bb9d5b.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/UI/FormControls/Checkbox/Checkbox.module.scss?25a9","UI/FormControls/Checkbox/Checkbox.jsx","webpack://samurai-way/./src/UI/FormControls/Field/Field.module.scss?80fb","UI/FormControls/Field/Field.jsx","webpack://samurai-way/./src/components/Login/Login.module.scss?4086","webpack://samurai-way/./src/components/Login/LoginForm/LoginForm.module.scss?ebd6","webpack://samurai-way/./src/UI/FormControls/Captcha/Captcha.module.scss?8606","UI/FormControls/Captcha/Captcha.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Checkbox_container__sVo6P\",\"Checkbox\":\"Checkbox_Checkbox__JIYPe\",\"error\":\"Checkbox_error__dLJ4c\"};","import React from 'react'\r\nimport classes from './Checkbox.module.scss';\r\n\r\nconst Checkbox = ({register, name, ...rest}) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Checkbox} ${rest.className}`}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"checkbox\" id={name} \r\n\t\t\t\t{...register(name, {required: true, ...rest.validation} )} \r\n\t\t\t\tclassName={classes.checkboxInput}\r\n\t\t\t/>\r\n\t\t\t<label \r\n\t\t\t\thtmlFor={name} tabIndex='0' \r\n\t\t\t\tclassName={`${classes.checkboxLabel} ${rest.error && classes.error}`}\r\n\t\t\t>{rest.labelText}</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Field_container__1XU3U\",\"Field\":\"Field_Field__-Tjhi\",\"errorMessage\":\"Field_errorMessage__vB2Ku\"};","import React from 'react';\r\nimport classes from './Field.module.scss';\r\n\r\nconst Field = ({className, error, children }) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Field} ${className}`}>\r\n\t\t\t{children}\r\n\t\t\t{error && <p className={classes.errorMessage}>{error.message}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const PasswordField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"password\" className={classes.input}  autoComplete='true'\r\n\t\t\t\tplaceholder='Password' {...register('password', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t//value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\r\n\t\t\t\t\t\tmessage: 'Password must have at least 1 upper case symbol, 1 number', \r\n\t\t\t\t\t},\r\n\t\t\t\t\tminLength: {value: 8, message: 'Your password too short'},\r\n\t\t\t\t\tmaxLength: {value: 14, message: 'Your password too long'},\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport const EmailField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"email\" className={classes.input} \r\n\t\t\t\tplaceholder='Email' {...register('email', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport default Field;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__4AqVf\",\"Login\":\"Login_Login__0aACz\",\"title\":\"Login_title__uHeoG\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__PQS8+\",\"LoginForm\":\"LoginForm_LoginForm__sLkxx\",\"inputWrapper\":\"LoginForm_inputWrapper__8YBqi\",\"submitBtn\":\"LoginForm_submitBtn__77756\",\"input\":\"LoginForm_input__z4V6a\",\"checkbox\":\"LoginForm_checkbox__vYXM5\",\"errorMessage\":\"LoginForm_errorMessage__Qvi2S\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Captcha_container__5FE-X\",\"Captcha\":\"Captcha_Captcha__Wc0AA\",\"image\":\"Captcha_image__X8BY8\"};","import React from 'react'\r\nimport Field from '../Field/Field';\r\nimport classes from './Captcha.module.scss';\r\n\r\nconst Captcha = ({register, captchaUrl, className}) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Captcha} ${className}`}>\r\n\t\t\t<div className={classes.image}>\r\n\t\t\t\t<img src={captchaUrl} alt=\"captcha image\" />\r\n\t\t\t</div>\r\n\t\t\t<Field>\r\n\t\t\t\t<input className={classes.input}\r\n\t\t\t\t\ttype='text' {...register('captcha', {\r\n\t\t\t\t\t\trequired: 'Captcha is required'\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</Field>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Captcha;\r\n","import React from 'react';\r\nimport classes from './LoginForm.module.scss';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../../Redux/auth-reducer';\r\nimport Field, { PasswordField, EmailField } from '../../../UI/FormControls/Field/Field';\r\nimport Checkbox from '../../../UI/FormControls/Checkbox';\r\nimport Captcha from '../../../UI/FormControls/Captcha';\r\nimport { Navigate } from 'react-router-dom'\r\nimport Preloader from '../../../UI/Preloader';\r\n\r\nconst LoginForm = (props) => {\r\n\tconst { \r\n\t\tregister, handleSubmit, setError, clearErrors, \r\n\t\tformState: { errors, isSubmitSuccessful,isValidating } \r\n\t} = useForm();\r\n\r\n\tconst onSubmit = async data => {\r\n\t\t//login return error or null\r\n\t\tconst err = await props.login({...data});\r\n\t\tconsole.log(err);\r\n\t\tif(err) {\r\n\t\t\tsetError('summary', {\r\n\t\t\t\ttype: 'custom',\r\n\t\t\t\tmessage: err,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst clearSummaryError = () => {\r\n\t\tif(errors.summary) clearErrors('summary');\r\n\t}\r\n\r\n\r\n\tif(props.isAuthed) return <Navigate  to='/profile' replace/>\r\n\tif(isValidating) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<form action=\"#\" className={classes.LoginForm} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<EmailField className={classes.inputWrapper} error={errors.email} register={register}/>\r\n\t\t\t<PasswordField className={classes.inputWrapper} error={errors.password} register={register}/>\r\n\t\t\t<Checkbox \r\n\t\t\t\tregister={register}\r\n\t\t\t\terror={errors.rememberMe} name='rememberMe' labelText='Remember me'\r\n\t\t\t/>\r\n\t\t\t{props.captcha &&\r\n\t\t\t\t<Captcha register={register} captchaUrl={props.captcha} className={classes.captcha} />\r\n\t\t\t}\r\n\t\t\t<button className={classes.submitBtn} onClick={clearSummaryError}>Sumbit</button>\r\n\t\t\t{errors.summary && <p className={classes.errorMessage}>{errors.summary.message}</p>}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthed: state.auth.data.isAuthed,\r\n\t\tcaptcha: state.auth.captchaUrl,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginForm);\r\n","import React from 'react';\r\nimport withNetworkRedirect from '../../hocs/withNetworkRedirect';\r\nimport classes from './Login.module.scss';\r\nimport LoginForm from './LoginForm';\r\n\r\nconst Login = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.Login}>\r\n\t\t\t<h1 className={classes.title}>Login</h1>\r\n\t\t\t<LoginForm />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withNetworkRedirect(Login);\r\n"],"names":["register","name","rest","className","classes","type","id","required","validation","htmlFor","tabIndex","error","labelText","Field","children","message","PasswordField","autoComplete","placeholder","pattern","minLength","value","maxLength","EmailField","captchaUrl","src","alt","connect","state","isAuthed","auth","data","captcha","login","props","useForm","handleSubmit","setError","clearErrors","formState","errors","isValidating","isSubmitSuccessful","onSubmit","err","console","log","to","replace","Preloader","action","email","password","Checkbox","rememberMe","onClick","summary","withNetworkRedirect"],"sourceRoot":""}