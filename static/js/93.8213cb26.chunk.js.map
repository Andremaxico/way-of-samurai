{"version":3,"file":"static/js/93.8213cb26.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Login/Login.module.scss?4086","webpack://samurai-way/./src/components/Login/LoginForm/LoginForm.module.scss?ebd6","webpack://samurai-way/./src/UI/FormControls/Field/Field.module.scss?80fb","UI/FormControls/Field/Field.jsx","webpack://samurai-way/./src/UI/FormControls/Checkbox/Checkbox.module.scss?25a9","UI/FormControls/Checkbox/Checkbox.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__4AqVf\",\"Login\":\"Login_Login__0aACz\",\"title\":\"Login_title__uHeoG\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__PQS8+\",\"LoginForm\":\"LoginForm_LoginForm__sLkxx\",\"inputWrapper\":\"LoginForm_inputWrapper__8YBqi\",\"submitBtn\":\"LoginForm_submitBtn__77756\",\"input\":\"LoginForm_input__z4V6a\",\"checkbox\":\"LoginForm_checkbox__vYXM5\",\"errorMessage\":\"LoginForm_errorMessage__Qvi2S\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Field_container__1XU3U\",\"Field\":\"Field_Field__-Tjhi\",\"errorMessage\":\"Field_errorMessage__vB2Ku\"};","import React from 'react';\r\nimport classes from './Field.module.scss';\r\n\r\nconst Field = ({className, error, children }) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Field} ${className}`}>\r\n\t\t\t{children}\r\n\t\t\t{error && <p className={classes.errorMessage}>{error.message}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const PasswordField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"password\" className={classes.input}  autoComplete='true'\r\n\t\t\t\tplaceholder='Password' {...register('password', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t//value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\r\n\t\t\t\t\t\tmessage: 'Password must have at least 1 upper case symbol, 1 number', \r\n\t\t\t\t\t},\r\n\t\t\t\t\tminLength: {value: 8, message: 'Your password too short'},\r\n\t\t\t\t\tmaxLength: {value: 14, message: 'Your password too long'},\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport const EmailField = ({register, ...rest}) => {\r\n\treturn (\r\n\t\t<Field {...rest}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"email\" className={classes.input} \r\n\t\t\t\tplaceholder='Email' {...register('email', {\r\n\t\t\t\t\trequired: 'This field is required',\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t</Field>\r\n\t)\r\n}\r\n\r\nexport default Field;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Checkbox_container__sVo6P\",\"Checkbox\":\"Checkbox_Checkbox__JIYPe\",\"error\":\"Checkbox_error__dLJ4c\"};","import React from 'react'\r\nimport classes from './Checkbox.module.scss';\r\n\r\nconst Checkbox = ({register, name, ...rest}) => {\r\n\treturn (\r\n\t\t<div className={`${classes.Checkbox} ${rest.className}`}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"checkbox\" id={name} \r\n\t\t\t\t{...register(name, {required: true, ...rest.validation} )} \r\n\t\t\t\tclassName={classes.checkboxInput}\r\n\t\t\t/>\r\n\t\t\t<label \r\n\t\t\t\thtmlFor={name} tabIndex='0' \r\n\t\t\t\tclassName={`${classes.checkboxLabel} ${rest.error && classes.error}`}\r\n\t\t\t>{rest.labelText}</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport classes from './LoginForm.module.scss';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../../Redux/auth-reducer';\r\nimport Field, { PasswordField, EmailField } from '../../../UI/FormControls/Field/Field';\r\nimport Checkbox from '../../../UI/FormControls/Checkbox';\r\nimport { Navigate } from 'react-router-dom'\r\nimport Preloader from '../../../UI/Preloader';\r\n\r\nconst LoginForm = (props) => {\r\n\tconst { \r\n\t\tregister, handleSubmit, setError, clearErrors, \r\n\t\tformState: { errors, isSubmitSuccessful,isValidating } \r\n\t} = useForm();\r\n\r\n\tconst onSubmit = async data => {\r\n\t\t//login return error or null\r\n\t\tconst err = await props.login({...data, captcha: false});\r\n\t\tif(err) {\r\n\t\t\tsetError('summary', {\r\n\t\t\t\ttype: 'custom',\r\n\t\t\t\tmessage: err,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleFormChange = () => {\r\n\t\tif(errors.summary) clearErrors('summary');\r\n\t};\r\n\r\n\r\n\tif(props.isAuthed) return <Navigate  to='/profile' replace/>\r\n\tif(isValidating) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<form action=\"#\" className={classes.LoginForm} onChange={ handleFormChange } onSubmit={ handleSubmit(onSubmit) }>\r\n\t\t\t<EmailField className={classes.inputWrapper} error={errors.email} register={register}/>\r\n\t\t\t<PasswordField className={classes.inputWrapper} error={errors.password} register={register}/>\r\n\t\t\t<Checkbox \r\n\t\t\t\tregister={register}\r\n\t\t\t\terror={errors.rememberMe} name='rememberMe' labelText='Remember me'\r\n\t\t\t/>\r\n\t\t\t<button className={classes.submitBtn}>Sumbit</button>\r\n\t\t\t{errors.summary && <p className={classes.errorMessage}>{errors.summary.message}</p>}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthed: state.auth.data.isAuthed,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginForm);\r\n","import React from 'react';\r\nimport withNetworkRedirect from '../../hocs/withNetworkRedirect';\r\nimport classes from './Login.module.scss';\r\nimport LoginForm from './LoginForm';\r\n\r\nconst Login = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.Login}>\r\n\t\t\t<h1 className={classes.title}>Login</h1>\r\n\t\t\t<LoginForm />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withNetworkRedirect(Login);\r\n"],"names":["Field","className","error","children","classes","message","PasswordField","register","rest","type","autoComplete","placeholder","required","pattern","minLength","value","maxLength","EmailField","name","id","validation","htmlFor","tabIndex","labelText","connect","state","isAuthed","auth","data","login","props","useForm","handleSubmit","setError","clearErrors","formState","errors","isValidating","isSubmitSuccessful","onSubmit","captcha","err","to","replace","Preloader","action","onChange","summary","email","password","rememberMe","withNetworkRedirect"],"sourceRoot":""}